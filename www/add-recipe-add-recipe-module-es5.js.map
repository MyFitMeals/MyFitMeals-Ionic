{"version":3,"sources":["webpack:///src/app/add-recipe/add-recipe.page.html","webpack:///src/app/add-recipe/add-recipe-routing.module.ts","webpack:///src/app/add-recipe/add-recipe.module.ts","webpack:///src/app/add-recipe/add-recipe.page.scss","webpack:///src/app/add-recipe/add-recipe.page.ts"],"names":["routes","path","component","AddRecipePageRoutingModule","imports","forChild","exports","AddRecipePageModule","declarations","AddRecipePage","http","popoverController","toastController","router","recipesLoader","registerForm","name","required","calories","proteins","fats","carbs","instructions","preparationTime","ingredients","tips","event","target","files","length","file","images","formData","FormData","append","value","post","subscribe","res","presentToast","console","log","loadRecipes","then","result","navigate","err","msg","create","message","duration","toast","present","selector","template"],"mappings":"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","file":"add-recipe-add-recipe-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Ajouter une recette</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <form [formGroup] = \\\"registerForm\\\">\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Nom recette</ion-label>\\n        <ion-input type = \\\"text\\\" name = \\\"recipeName\\\" formControlName=\\\"name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Calories</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"calories\\\" formControlName=\\\"calories\\\" ></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Protéines</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"proteins\\\" formControlName=\\\"proteins\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Lipides</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"fats\\\" formControlName=\\\"fats\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Glucides</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"carbs\\\" formControlName=\\\"carbs\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Instructions</ion-label>\\n        <ion-textarea type = \\\"text\\\" name = \\\"instructions\\\" formControlName=\\\"instructions\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Ingredients</ion-label>\\n        <ion-textarea type = \\\"text\\\" name = \\\"ingredients\\\" formControlName=\\\"ingredients\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Temps de préparation</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"preparationTime\\\" formControlName=\\\"preparationTime\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Conseils</ion-label>\\n        <ion-textarea type = \\\"text\\\" name = \\\"tips\\\" formControlName=\\\"tips\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-input type = \\\"file\\\" name = \\\"image\\\" (change) = \\\"selectImage($event)\\\"></ion-input>\\n      </ion-item>\\n\\n\\n          <ion-button type = \\\"submit\\\" (click) = \\\"onSubmit()\\\" style=\\\"font-size: 20px; margin-left: 10px;\\\">Ajouter recette</ion-button>\\n\\n    </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddRecipePage } from './add-recipe.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddRecipePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddRecipePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddRecipePageRoutingModule } from './add-recipe-routing.module';\n\nimport { AddRecipePage } from './add-recipe.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AddRecipePageRoutingModule\n  ],\n  declarations: [AddRecipePage]\n})\nexport class AddRecipePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1yZWNpcGUvYWRkLXJlY2lwZS5wYWdlLnNjc3MifQ== */\";","import { RecipesLoaderService } from './../services/recipes-loader.service';\nimport { Component, OnInit } from '@angular/core';\nimport { PopoverController, ToastController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-recipe',\n  templateUrl: './add-recipe.page.html',\n  styleUrls: ['./add-recipe.page.scss'],\n})\nexport class AddRecipePage implements OnInit {\n\n  ngOnInit() {\n  }\n\n  private images;\n\n  registerForm = new FormGroup(\n    {\n      name: new FormControl('', Validators.required),\n      calories: new FormControl('', Validators.required),\n      proteins: new FormControl('', Validators.required),\n      fats: new FormControl('', Validators.required),\n      carbs: new FormControl('', Validators.required),\n      instructions: new FormControl('', Validators.required),\n      preparationTime: new FormControl('', Validators.required),\n      ingredients: new FormControl('', Validators.required),\n      tips: new FormControl('', Validators.required),\n    }\n  );\n\n  constructor(private http: HttpClient, private popoverController: PopoverController, \n    private toastController: ToastController, private router: Router, private recipesLoader: RecipesLoaderService) {}\n\n  selectImage(event) {\n    if(event.target.files.length > 0) \n    {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  onSubmit() {\n\n    const formData = new FormData();\n    formData.append('file', this.images);\n    formData.append('name', this.registerForm.value.name);\n    formData.append('calories', this.registerForm.value.calories);\n    formData.append('proteins', this.registerForm.value.proteins);\n    formData.append('fats', this.registerForm.value.fats);\n    formData.append('carbs', this.registerForm.value.carbs);\n    formData.append('instructions', this.registerForm.value.instructions);\n    formData.append('preparationTime', this.registerForm.value.preparationTime);\n    formData.append('ingredients', this.registerForm.value.ingredients);\n    formData.append('tips', this.registerForm.value.tips);\n\n\n    this.http.post<any>('https://myfitmeals.herokuapp.com/recipes/', formData).subscribe(\n      (res) =>\n      {\n        this.presentToast('Recette ajoutée avec succès !');\n        console.log(res);\n        this.recipesLoader.loadRecipes().then(result =>\n          {\n            this.router.navigate(['tabs/tab1']);\n          })\n        \n      },\n      (err) =>\n      {\n        console.log(err);\n        this.presentToast('Echec d\\'ajout de la recette... !')\n      } \n    );\n  }\n\n\n  async presentToast(msg: string) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 1000\n    });\n    toast.present();\n  }\n}\n"]}