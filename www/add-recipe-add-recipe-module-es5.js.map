{"version":3,"sources":["webpack:///src/app/add-recipe/add-recipe.page.html","webpack:///src/app/add-recipe/add-recipe-routing.module.ts","webpack:///src/app/add-recipe/add-recipe.module.ts","webpack:///src/app/add-recipe/add-recipe.page.scss","webpack:///src/app/add-recipe/add-recipe.page.ts","webpack:///src/app/models/diet.ts","webpack:///src/app/models/temperature.ts","webpack:///src/app/models/type.ts"],"names":["routes","path","component","AddRecipePageRoutingModule","imports","forChild","exports","AddRecipePageModule","declarations","AddRecipePage","http","popoverController","toastController","router","recipesLoader","registerForm","name","required","calories","proteins","fats","carbs","instructions","preparationTime","ingredients","tips","event","target","files","length","file","images","formData","FormData","append","value","temperature","undefined","type","diet","post","subscribe","res","presentToast","console","log","loadRecipes","then","result","navigate","err","msg","create","message","duration","toast","present","categorie","detail","CHAUD","FROID","SUCRE","SALE","getValue","Object","values","slice","selector","template","Diet","LOW_CARB","VEGETARIAN","GLUTEN_FREE","Temperature","Type"],"mappings":"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","file":"add-recipe-add-recipe-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Ajouter une recette</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <form [formGroup] = \\\"registerForm\\\">\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Nom recette</ion-label>\\n        <ion-input type = \\\"text\\\" name = \\\"recipeName\\\" formControlName=\\\"name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Calories</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"calories\\\" formControlName=\\\"calories\\\" ></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Protéines</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"proteins\\\" formControlName=\\\"proteins\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Lipides</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"fats\\\" formControlName=\\\"fats\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Glucides</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"carbs\\\" formControlName=\\\"carbs\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Instructions</ion-label>\\n        <ion-textarea type = \\\"text\\\" name = \\\"instructions\\\" formControlName=\\\"instructions\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Ingredients</ion-label>\\n        <ion-textarea type = \\\"text\\\" name = \\\"ingredients\\\" formControlName=\\\"ingredients\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Temps de préparation</ion-label>\\n        <ion-input type = \\\"number\\\" name = \\\"preparationTime\\\" formControlName=\\\"preparationTime\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position = \\\"floating\\\">Conseils</ion-label>\\n        <ion-textarea type = \\\"text\\\" name = \\\"tips\\\" formControlName=\\\"tips\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-list>\\n        <ion-radio-group\\n        allow-empty-selection = \\\"true\\\"\\n        name=\\\"radio-group\\\"\\n        (ionChange)=\\\"radioGroupChange($event, 'Temperature')\\\">\\n          <ion-list-header>\\n            <ion-label>Plat...</ion-label>\\n          </ion-list-header>\\n      \\n          <ion-item *ngFor = \\\"let temperature of getAllValuesEnum('Temperature')\\\">\\n            <ion-label>{{temperature}}</ion-label>\\n            <ion-radio slot=\\\"start\\\" [value]=\\\"getTemperature(temperature)\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n\\n      <ion-list>\\n        <ion-radio-group\\n        allow-empty-selection = \\\"true\\\"\\n        name=\\\"radio-group\\\"\\n        (ionChange)=\\\"radioGroupChange($event, 'Type')\\\">\\n        <ion-list-header>\\n          <ion-label>Sucré/Salé</ion-label>\\n        </ion-list-header>\\n\\n        <ion-item *ngFor = \\\"let type of getAllValuesEnum('Type')\\\">\\n          <ion-label>{{type}}</ion-label>\\n          <ion-radio slot=\\\"start\\\" [value]=\\\"getType(type)\\\"></ion-radio>\\n        </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n\\n\\n      <ion-list>\\n        <ion-radio-group\\n        allow-empty-selection = \\\"true\\\"\\n        name=\\\"radio-group\\\"\\n        (ionChange)=\\\"radioGroupChange($event, 'Diet')\\\">\\n        <ion-list-header>\\n          <ion-label>Régime/Allergies</ion-label>\\n        </ion-list-header>\\n\\n        <ion-item *ngFor = \\\"let diet of getAllValuesEnum('Diet')\\\">\\n          <ion-label>{{diet}}</ion-label>\\n          <ion-radio slot=\\\"start\\\" [value]=\\\"getDiet(diet)\\\"></ion-radio>\\n        </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n\\n      <ion-item>\\n        <ion-input type = \\\"file\\\" name = \\\"image\\\" (change) = \\\"selectImage($event)\\\"></ion-input>\\n      </ion-item>\\n\\n\\n          <ion-button type = \\\"submit\\\" (click) = \\\"onSubmit()\\\" style=\\\"font-size: 20px; margin-left: 10px;\\\">Ajouter recette</ion-button>\\n\\n    </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddRecipePage } from './add-recipe.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddRecipePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddRecipePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddRecipePageRoutingModule } from './add-recipe-routing.module';\n\nimport { AddRecipePage } from './add-recipe.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AddRecipePageRoutingModule\n  ],\n  declarations: [AddRecipePage]\n})\nexport class AddRecipePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1yZWNpcGUvYWRkLXJlY2lwZS5wYWdlLnNjc3MifQ== */\";","import { Diet } from './../models/diet';\nimport { Type } from './../models/type';\nimport { RecipesLoaderService } from './../services/recipes-loader.service';\nimport { Component, OnInit } from '@angular/core';\nimport { PopoverController, ToastController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Temperature } from 'src/app/models/temperature';\n\n@Component({\n  selector: 'app-add-recipe',\n  templateUrl: './add-recipe.page.html',\n  styleUrls: ['./add-recipe.page.scss'],\n})\nexport class AddRecipePage implements OnInit {\n  temperature: any;\n  type: any;\n  diet: any;\n\n  ngOnInit() {\n  }\n\n  private images;\n\n  registerForm = new FormGroup(\n    {\n      name: new FormControl('', Validators.required),\n      calories: new FormControl('', Validators.required),\n      proteins: new FormControl('', Validators.required),\n      fats: new FormControl('', Validators.required),\n      carbs: new FormControl('', Validators.required),\n      instructions: new FormControl('', Validators.required),\n      preparationTime: new FormControl('', Validators.required),\n      ingredients: new FormControl('', Validators.required),\n      tips: new FormControl('', Validators.required),\n    }\n  );\n\n  constructor(private http: HttpClient, private popoverController: PopoverController, \n    private toastController: ToastController, private router: Router, private recipesLoader: RecipesLoaderService) {}\n\n  selectImage(event) {\n    if(event.target.files.length > 0) \n    {\n      const file = event.target.files[0];\n      this.images = file;\n    }\n  }\n\n  onSubmit() {\n\n    const formData = new FormData();\n    formData.append('file', this.images);\n    formData.append('name', this.registerForm.value.name);\n    formData.append('calories', this.registerForm.value.calories);\n    formData.append('proteins', this.registerForm.value.proteins);\n    formData.append('fats', this.registerForm.value.fats);\n    formData.append('carbs', this.registerForm.value.carbs);\n    formData.append('instructions', this.registerForm.value.instructions);\n    formData.append('preparationTime', this.registerForm.value.preparationTime);\n    formData.append('ingredients', this.registerForm.value.ingredients);\n    formData.append('tips', this.registerForm.value.tips);\n    if(this.temperature != null && this.temperature != undefined) {\n      formData.append('temperature', this.temperature);\n    }\n    if(this.type != null && this.type != undefined) {\n      formData.append('type', this.type);\n    }\n    if(this.diet != null && this.diet != undefined) {\n      formData.append('diet', this.diet);\n    }\n\n\n    this.http.post<any>('https://myfitmeals.herokuapp.com/recipes/', formData).subscribe(\n      (res) =>\n      {\n        this.presentToast('Recette ajoutée avec succès !');\n        console.log(res);\n        this.recipesLoader.loadRecipes().then(result =>\n          {\n            this.router.navigate(['tabs/tab1']);\n          })\n        \n      },\n      (err) =>\n      {\n        console.log(err);\n        this.presentToast('Echec d\\'ajout de la recette... !')\n      } \n    );\n  }\n\n\n  async presentToast(msg: string) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 1000\n    });\n    toast.present();\n  }\n\n  radioGroupChange(event, categorie) {\n    console.log(event.detail);\n    if(\"Temperature\" === categorie) this.temperature = event.detail.value;\n    if(\"Type\" === categorie) this.type = event.detail.value;\n    if(\"Diet\" === categorie) this.diet = event.detail.value;\n    }\n\n  getTemperature(value: any) {\n    console.log(value);\n    if(\"Chaud\" === value) {\n      return Temperature.CHAUD;\n    }\n\n    else if(\"Froid\" === value) {\n      return Temperature.FROID;\n    }\n  }\n\n  getType(value: any) {\n    console.log(value);\n    if(\"Sucré\" === value) {\n      return Type.SUCRE;\n    }\n\n    else if(\"Salé\" === value) {\n      return Type.SALE;\n    }\n  }\n\n  getDiet(value: any) {\n    return Diet.getValue(value);\n  }\n\n  getAllValuesEnum(value: any) {\n    if(value === 'Type') return Object.values(Type).slice(0, Object.values(Type).length - 1);\n    if(value === 'Diet') return Object.values(Diet).slice(0, Object.values(Diet).length - 1);\n    if(value === 'Temperature') return Object.values(Temperature).slice(0, Object.values(Temperature).length - 1);\n  }\n}\n","export enum Diet {\r\n    LOW_CARB = \"Low Carb\",\r\n    VEGETARIAN = \"Végétarien\",\r\n    GLUTEN_FREE = \"Gluten Free\"\r\n}\r\n\r\nexport namespace Diet {\r\n    export function getValue(value: any) {\r\n        if(\"Low Carb\" === value) return Diet.LOW_CARB;\r\n        if(\"Végétarien\" === value) return Diet.VEGETARIAN;\r\n        if(\"Gluten Free\" === value) return Diet.GLUTEN_FREE;\r\n    }\r\n}","export enum Temperature {\r\n    CHAUD = \"Chaud\",\r\n    FROID = \"Froid\"\r\n}\r\n\r\nexport namespace Temperature {\r\n    export function getValue(value: any) {\r\n        if(\"Chaud\" === value) return Temperature.CHAUD;\r\n        if(\"Froid\" === value) return Temperature.FROID;\r\n    }\r\n}","export enum Type {\r\n    SUCRE = \"Sucré\",\r\n    SALE = \"Salé\"\r\n}\r\n\r\nexport namespace Type {\r\n    export function getValue(value: any) {\r\n        if(\"Sucré\" === value) return Type.SUCRE;\r\n        if(\"Salé\" === value) return Type.SALE;\r\n    }\r\n}"]}